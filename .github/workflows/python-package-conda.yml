name: keti-aws-crawler workflow

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    
     # 1. GitHub 코드 체크아웃
    - uses: actions/checkout@v4

    # 2. GitHub Actions IP 가져오기 (최우선)
    - name: Get GitHub Actions IP
      id: ip
      uses: haythem/public-ip@v1.2

    # 3. AWS Credentials 세팅
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    # 4. GitHub Actions IP를 EC2 Security Group에 추가
    - name: Add GitHub Actions IP to Security Group
      run: |
        aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} \
        --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

    # 5. Conda 캐시 설정 및 환경 구성 (로컬 CI 머신용)
    - name: Set up Conda with caching
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: keti_aws_crawler
        environment-file: environment.yml
        auto-activate-base: false
        use-only-tar-bz2: true
        cache-environment: true

    # 6. Python 환경 구성 (flake8은 Conda env 이후 설치 추천)
    - name: Lint with flake8
      run: |
        conda install -n keti_aws_crawler flake8 -y
        conda run -n keti_aws_crawler flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        conda run -n keti_aws_crawler flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # 7. EC2에 SSH 접속 후 배포
    - name: SSH to EC2 and run project
      env:
        SSH_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
      run: |
        echo "$SSH_KEY" > key.pem
        chmod 400 key.pem

        ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.SSH_EC2_USER }}@${{ secrets.SSH_EC2_HOST }} << 'EOF'
          set -e
          cd /home/ubuntu

          if [ ! -d "keti-aws-crawler/.git" ]; then
            git clone https://${{ secrets.GH_PAT }}@github.com/icuh-lab/keti-aws-crawler.git
          else
            cd keti-aws-crawler
            git pull origin main
            cd ..
          fi

          cd keti-aws-crawler
          source ~/anaconda3/etc/profile.d/conda.sh

          if conda info --envs | grep -q keti_aws_crawler; then
            echo "[info] 환경 업데이트"
            conda env update --name keti_aws_crawler --file environment.yml --prune
          else
            echo "[info] 환경 생성"
            conda env create --name keti_aws_crawler --file environment.yml
          fi

          export ENV=prod
          export SSH_PRIVATE_KEY="${{ secrets.SSH_PRIVATE_KEY }}"

          conda run -n keti_aws_crawler ENV=prod python src/main.py
        EOF

    # 8. GitHub Actions IP 제거
    - name: Remove GitHub Actions IP from Security Group
      run: |
        aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} \
        --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
